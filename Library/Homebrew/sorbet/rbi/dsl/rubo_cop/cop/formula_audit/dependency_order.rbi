# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `RuboCop::Cop::FormulaAudit::DependencyOrder`.
# Please instead update this file by running `bin/tapioca dsl RuboCop::Cop::FormulaAudit::DependencyOrder`.

class RuboCop::Cop::FormulaAudit::DependencyOrder
  sig { params(node: T.untyped, block: T.untyped).returns(T.untyped) }
  def build_with_dependency_node(*node, &block); end

  sig { params(node: T.untyped, block: T.untyped).returns(T::Boolean) }
  def buildtime_dependency?(*node, &block); end

  sig { params(node: T.untyped, block: T.untyped).returns(T.untyped) }
  def dependency_name_node(*node, &block); end

  sig { params(node: RuboCop::AST::Node, kwargs: T.untyped, block: T.untyped).returns(T.untyped) }
  def depends_on_node?(*node, **kwargs, &block); end

  sig { params(node: T.untyped, block: T.untyped).returns(T::Boolean) }
  def negate_normal_dependency?(*node, &block); end

  sig { params(node: T.untyped, block: T.untyped).returns(T::Boolean) }
  def optional_dependency?(*node, &block); end

  sig { params(node: T.untyped, block: T.untyped).returns(T::Boolean) }
  def recommended_dependency?(*node, &block); end

  sig { params(node: T.untyped, block: T.untyped).returns(T::Boolean) }
  def test_dependency?(*node, &block); end

  sig { params(node: RuboCop::AST::Node, kwargs: T.untyped, block: T.untyped).returns(T.untyped) }
  def uses_from_macos_node?(*node, **kwargs, &block); end
end
