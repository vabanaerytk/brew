#!/usr/bin/ruby
# Copyright 2009 Max Howell <max@methylblue.com>
# Licensed as per the GPL version 3
require 'find'
require 'pathname'
$root = Pathname.new(__FILE__).realpath.dirname.parent.parent

def prune
  n=0
  dirs=Array.new
  $root.find do |path|
    if path.directory?
      name=path.relative_path_from($root).to_s
      if name == '.git' or name == 'Cellar' or name == 'Formula'
        Find.prune
      else
        dirs<<path
      end
    elsif path.symlink?
      resolved_path=path.dirname+path.readlink
      unless resolved_path.exist?
        path.unlink
        n+=1
      end
    end
  end
  # entries lists '.' and '..' so 2 is minimum basically
  dirs.sort.reverse_each { |d| d.rmdir if d.children.length == 0 }
  return n
end

case ARGV[0]
  when 'brew', 'install' then
    abort "You must specify a Formula" unless ARGV[1]
    ARGV.shift
    file="#{$root}/Formula/#{ARGV.shift}"
    file+='.rb' unless File.exist? file
    system "ruby #{file} #{ARGV.join ' '}"

  when 'rm' then
    path=$root+'Cellar'+ARGV[1]
    abort "#{ARGV[1]} is not installed" unless path.directory?
    path.rmtree
    prune
    puts "#{path} removed"

  when 'ln' then
    abort "#{ARGV[1]} is not a directory" unless File.directory? ARGV[1]

    #TODO if user specifies just name and not version dir, do latest version
    #TODO you should mkdirs as you find them and symlink files otherwise
    #TODO consider using hardlinks

    target=Pathname.new(ARGV[1]).realpath
    target.find do |from|
      next if from == ARGV[1] #rubysucks

      to=$root+from.relative_path_from(target)

      if from.directory?
        to.mkpath unless to.exist?
      elsif from.file?
        tod=to.dirname
        Dir.chdir(tod) do
          `ln -sf "#{from.relative_path_from tod}"`
          n+=1
        end
      end
    end
    puts "Created #{n} links"

  when 'prune', 'pasteurize' then
    puts "Pruned #{prune} files"

  else
    puts "usage: #{$0} [prune] [ln path] [install pkg]"
end